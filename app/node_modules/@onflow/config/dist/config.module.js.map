{"version":3,"file":"config.module.js","sources":["../src/index.js"],"sourcesContent":["import {\n  spawn,\n  send,\n  subscriber,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\n\nconst NAME = \"config\"\nconst PUT = \"PUT_CONFIG\"\nconst GET = \"GET_CONFIG\"\nconst UPDATE = \"UPDATE_CONFIG\"\nconst DELETE = \"DELETE_CONFIG\"\nconst WHERE = \"WHERE_CONFIG\"\nconst UPDATED = \"CONFIG/UPDATED\"\n\nconst identity = v => v\n\nconst HANDLERS = {\n  [PUT]: (ctx, _letter, {key, value}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/put.\")\n    ctx.put(key, value)\n    ctx.broadcast(UPDATED, ctx.all())\n  },\n  [GET]: (ctx, letter, {key, fallback}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/get\")\n    letter.reply(ctx.get(key, fallback))\n  },\n  [UPDATE]: (ctx, letter, {key, fn}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/update\")\n    ctx.update(key, fn || identity)\n    ctx.broadcast(UPDATED, ctx.all())\n  },\n  [DELETE]: (ctx, letter, {key}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/delete\")\n    ctx.delete(key)\n    ctx.broadcast(UPDATED, ctx.all())\n  },\n  [WHERE]: (ctx, letter, {pattern}) => {\n    if (pattern == null) throw new Error(\"Missing 'pattern' for config/where\")\n    letter.reply(ctx.where(pattern))\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n}\n\nspawn(HANDLERS, NAME)\n\nfunction put(key, value) {\n  send(NAME, PUT, {key, value})\n  return config()\n}\n\nfunction get(key, fallback) {\n  return send(NAME, GET, {key, fallback}, {expectReply: true, timeout: 10})\n}\n\nfunction update(key, fn = identity) {\n  send(NAME, UPDATE, {key, fn})\n  return config()\n}\n\nfunction _delete(key) {\n  send(NAME, DELETE, {key})\n  return config()\n}\n\nfunction where(pattern) {\n  return send(NAME, WHERE, {pattern}, {expectReply: true, timeout: 10})\n}\n\nfunction subscribe(callback) {\n  return subscriber(NAME, () => spawn(HANDLERS, NAME), callback)\n}\n\nexport function config() {\n  return {put, get, update, delete: _delete, where, subscribe}\n}\n"],"names":["NAME","PUT","GET","UPDATED","identity","v","HANDLERS","ctx","_letter","key","value","Error","put","broadcast","all","letter","fallback","reply","get","fn","update","pattern","where","SUBSCRIBE","subscribe","from","send","UNSUBSCRIBE","unsubscribe","config","expectReply","timeout","_delete","callback","subscriber","spawn","delete"],"mappings":"2GAQMA,EAAO,SACPC,EAAM,aACNC,EAAM,aAINC,EAAU,iBAEVC,EAAW,SAAAC,UAAKA,GAEhBC,UACHL,GAAM,SAACM,EAAKC,SAAUC,IAAAA,IAAKC,IAAAA,MAC1B,GAAW,MAAPD,EAAa,UAAUE,MAAM,iCACjCJ,EAAIK,IAAIH,EAAKC,GACbH,EAAIM,UAAUV,EAASI,EAAIO,UAE5BZ,GAAM,SAACK,EAAKQ,SAASN,IAAAA,IAAKO,IAAAA,SACzB,GAAW,MAAPP,EAAa,UAAUE,MAAM,gCACjCI,EAAOE,MAAMV,EAAIW,IAAIT,EAAKO,OARhB,cAUF,SAACT,EAAKQ,SAASN,IAAAA,IAAKU,IAAAA,GAC5B,GAAW,MAAPV,EAAa,UAAUE,MAAM,mCACjCJ,EAAIa,OAAOX,EAAKU,GAAMf,GACtBG,EAAIM,UAAUV,EAASI,EAAIO,UAbjB,cAeF,SAACP,EAAKQ,SAASN,IAAAA,IACvB,GAAW,MAAPA,EAAa,UAAUE,MAAM,mCACjCJ,SAAWE,GACXF,EAAIM,UAAUV,EAASI,EAAIO,UAlBjB,aAoBH,SAACP,EAAKQ,SAASM,IAAAA,QACtB,GAAe,MAAXA,EAAiB,UAAUV,MAAM,sCACrCI,EAAOE,MAAMV,EAAIe,MAAMD,OAExBE,GAAY,SAAChB,EAAKQ,GACjBR,EAAIiB,UAAUT,EAAOU,MACrBlB,EAAImB,KAAKX,EAAOU,KAAMtB,EAASI,EAAIO,UAEpCa,GAAc,SAACpB,EAAKQ,GACnBR,EAAIqB,YAAYb,EAAOU,UAM3B,SAASb,EAAIH,EAAKC,GAEhB,OADAgB,EAAK1B,EAAMC,EAAK,CAACQ,IAAAA,EAAKC,MAAAA,IACfmB,IAGT,SAASX,EAAIT,EAAKO,GAChB,OAAOU,EAAK1B,EAAME,EAAK,CAACO,IAAAA,EAAKO,SAAAA,GAAW,CAACc,aAAa,EAAMC,QAAS,KAGvE,SAASX,EAAOX,EAAKU,GAEnB,gBAFmBA,IAAAA,EAAKf,GACxBsB,EAAK1B,EApDQ,gBAoDM,CAACS,IAAAA,EAAKU,GAAAA,IAClBU,IAGT,SAASG,EAAQvB,GAEf,OADAiB,EAAK1B,EAxDQ,gBAwDM,CAACS,IAAAA,IACboB,IAGT,SAASP,EAAMD,GACb,OAAOK,EAAK1B,EA5DA,eA4Da,CAACqB,QAAAA,GAAU,CAACS,aAAa,EAAMC,QAAS,KAGnE,SAASP,EAAUS,GACjB,OAAOC,EAAWlC,EAAM,kBAAMmC,EAAM7B,EAAUN,IAAOiC,YAGvCJ,IACd,MAAO,CAACjB,IAAAA,EAAKM,IAAAA,EAAKE,OAAAA,EAAQgB,OAAQJ,EAASV,MAAAA,EAAOE,UAAAA,GA9BpDW,EAAM7B,EAAUN"}