{"version":3,"file":"fcl.js","sources":["../src/default-config.js","../src/resolve/index.js","../src/send/index.js","../src/decode/index.js","../src/transaction/index.js","../src/events/index.js","../src/address/index.js","../src/current-user/render-frame.js","../src/current-user/url-from-service.js","../src/current-user/render-authz-frame.js","../src/current-user/poll-for-authz-updates.js","../src/current-user/validate-composite-signature.js","../src/current-user/uid.js","../src/current-user/exec-authz-service.js","../src/current-user/index.js","../src/current-user/service-of-type.js","../src/current-user/render-authn-frame.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/fcl.js","../src/serialize/index.js"],"sourcesContent":["import {config} from \"@onflow/config\"\n\nconfig()\n  .put(\"accessNode.api\", \"http://localhost:8080\")\n  .put(\"challenge.handshake\", \"http://localhost:8700/authenticate\")\n","import {\n  resolve as sdkResolve,\n  resolveParams,\n  resolveArguments,\n  resolveAccounts,\n  resolveSignatures,\n  resolveValidators,\n  resolveRefBlockId,\n  // resolveProposerSequenceNumber,\n} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\n\nexport const resolve = async ix => {\n  return sdkResolve(ix, [\n    resolveRefBlockId({node: await config().get(\"accessNode.api\")}),\n    // resolveProposerSequenceNumber({ node: await config().get(\"accessNode.api\") }),\n    resolveParams,\n    resolveArguments,\n    resolveAccounts,\n    resolveSignatures,\n    resolveValidators,\n  ])\n}\n","import {build, send as sdkSend} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\nimport {resolve} from \"../resolve\"\n\nexport const send = async (args = [], opts = {}) => {\n  opts.node = opts.node || (await config().get(\"accessNode.api\"))\n  if (Array.isArray(args)) args = build(args)\n  return sdkSend(await resolve(args), opts)\n}\n","import {decodeResponse} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\n\nexport const decode = async response => {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.fromEntries(\n    Object.entries(decodersFromConfig).map(([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    })\n  )\n  return decodeResponse(response, decoders)\n}\n","import \"../default-config\"\nimport {config} from \"@onflow/config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend} from \"../send\"\nimport {decode} from \"../decode\"\nimport {getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  const response = await fclSend([getTransactionStatus(transactionId)])\n  return decode(response)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe(txStatus => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config} from \"@onflow/config\"\nimport {getLatestBlock, getEvents} from \"@onflow/sdk\"\nimport {send} from \"../send\"\nimport {decode} from \"../decode\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst currentBlock = async () => {\n  return decode(await send([getLatestBlock()]))\n}\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await currentBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await currentBlock()\n      ctx.put(\"hwm\", next)\n      const resp = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ])\n      const data = await decode(resp)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","export function sansPrefix(address) {\n  if (address == null) return null\n  return address.replace(/^0x/, \"\")\n}\n\nexport function withPrefix(address) {\n  if (address == null) return null\n  return \"0x\" + sansPrefix(address)\n}\n","const FRAME_ID = \"FCL_IFRAME\"\n\nexport function renderFrame(src) {\n  if (document.getElementById(FRAME_ID)) return\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME_ID\n  $frame.allow = \"usb\"\n  $frame.style.position = \"fixed\"\n  $frame.style.top = \"0px\"\n  $frame.style.right = \"0px\"\n  $frame.style.left = \"0px\"\n  $frame.style.bottom = \"0px\"\n  $frame.style.height = \"100vh\"\n  $frame.style.width = \"100vw\"\n  $frame.style.display = \"block\"\n  $frame.style.background = \"rgba(0,0,0,0.25)\"\n  $frame.frameBorder = \"0\"\n  $frame.style.boxSizing = \"border-box\"\n  $frame.style.border = \"1px solid white\"\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME_ID)) {\n      document.getElementById(FRAME_ID).remove()\n    }\n  }\n\n  return [$frame, unmount]\n}\n","export function urlFromService(service, includeParams = true) {\n  const url = new URL(service.endpoint)\n  if (includeParams) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {urlFromService} from \"./url-from-service\"\nimport {renderFrame} from \"./render-frame\"\n\nexport function renderAuthzFrame(service) {\n  var url = urlFromService(service)\n  return renderFrame(url.href)\n}\n","import {urlFromService} from \"./url-from-service\"\n\nconst METHODS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nexport const pollForAuthzUpdates = service =>\n  new Promise(async (resolve, reject) => {\n    const resp = await fetch(urlFromService(service), {\n      method: METHODS[service.method],\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(d => d.json())\n\n    if (resp.status === \"APPROVED\") {\n      resolve(resp.compositeSignature)\n    } else if (resp.status === \"DECLINED\") {\n      reject({status: resp.status, reason: resp.reason})\n    } else {\n      setTimeout(() => {\n        resolve(pollForAuthzUpdates(resp.authorizationUpdates))\n      }, 500)\n    }\n  })\n","const label = (key, full) => (full == null ? `'${key}'` : `'${key}' (${full})`)\n\nconst missing = (key, full) =>\n  `Missing ${label(key, full)} in Composite Signature.`\nconst noMatch = (key, full) =>\n  `${label(\n    key,\n    full\n  )} in Composit Signature did not match the requested ${key}.`\n\nexport function validateCompositeSignature(compSig, authz) {\n  try {\n    if (compSig.addr == null) throw new Error(missing(\"addr\", \"Address\"))\n    if (compSig.keyId == null) throw new Error(missing(\"keyId\"))\n    if (compSig.signature == null) throw new Error(missing(\"signature\"))\n    if (compSig.addr !== authz.addr) throw new Error(noMatch(\"addr\", \"Address\"))\n    if (compSig.keyId !== authz.keyId) throw new Error(noMatch(\"keyId\"))\n    return compSig\n  } catch (error) {\n    console.error(error, \"\\n\\n\", {\n      \"Composite Signature\": compSig,\n      \"Authz Service\": authz,\n    })\n    throw new Error(\n      `Composite Signature from Wallet Provider failed Validation/Sanitation.\\nReason: ${error.message}`\n    )\n  }\n}\n","// Inspired by: https://github.com/lukeed/uid/blob/master/src/index.js , thank you Luke! https://github.com/lukeed\n\nvar HEX = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\nvar T = HEX.length\n\nexport function uid() {\n  var str = \"\",\n    num = 32\n  while (num--) str += HEX[(Math.random() * T) | 0]\n  return str\n}\n","import {urlFromService} from \"./url-from-service\"\nimport {renderAuthzFrame} from \"./render-authz-frame\"\nimport {pollForAuthzUpdates} from \"./poll-for-authz-updates\"\nimport {validateCompositeSignature} from \"./validate-composite-signature\"\nimport {uid} from \"./uid\"\n\nconst STRATEGIES = {\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n}\n\nexport async function execAuthzService(authz, signable) {\n  const compSig = await STRATEGIES[authz.method](authz, signable)\n  if (compSig.sig == null) compSig.sig = compSig.signature\n  if (compSig.signature == null) compSig.signature = compSig.sig\n  validateCompositeSignature(compSig, authz)\n  return compSig\n}\n\nasync function execHttpPost(authz, signable) {\n  var unrender = () => {}\n  var result = null\n  try {\n    const resp = await fetch(urlFromService(authz), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: signable ? JSON.stringify(signable) : undefined,\n    }).then(d => d.json())\n\n    if (resp.local && resp.local.length > 0) {\n      const [_, unmount] = renderAuthzFrame(resp.local[0])\n      unrender = unmount\n    }\n\n    result = await pollForAuthzUpdates(resp.authorizationUpdates)\n  } catch (error) {\n    unrender()\n    trouble(authz, signable, error)\n    throw error\n  } finally {\n    unrender()\n    return result\n  }\n}\n\nasync function execIframeRPC(authz, signable) {\n  return new Promise((resolve, reject) => {\n    try {\n      const id = uid()\n      const [$frame, unmount] = renderAuthzFrame(authz)\n      setTimeout(() => {\n        $frame.contentWindow.postMessage(\n          JSON.parse(\n            JSON.stringify({\n              jsonrpc: \"2.0\",\n              id,\n              method: \"fcl:sign\",\n              params: [signable, authz.params],\n            })\n          ),\n          \"*\"\n        )\n      }, 500)\n\n      const replyFn = async ({data}) => {\n        if (typeof data !== \"object\") return\n        if (data.jsonrpc !== \"2.0\") return\n        if (data.id !== id) return\n\n        const result = data.result\n\n        if (result.status === \"APPROVED\") {\n          window.removeEventListener(\"message\", replyFn)\n          unmount()\n          resolve(result.compositeSignature)\n        } else if (result.status === \"DECLINED\") {\n          window.removeEventListener(\"message\", replyFn)\n          unmount()\n          reject({status: result.status, reason: result.reason})\n        } else {\n          window.removeEventListener(\"message\", replyFn)\n          unmount()\n          reject({\n            status: \"DECLINED\",\n            reason: \"Status was neither APPROVED nor DECLINED\",\n          })\n        }\n      }\n\n      window.addEventListener(\"message\", replyFn)\n    } catch (error) {\n      trouble(authz, signable, error)\n      reject({status: \"DECLINED\", reason: \"Trouble talking to Wallet Provider\"})\n    }\n  })\n}\n\nfunction trouble(authz, signable, error) {\n  console.error(\n    `[${authz.method}] Trouble talking to Wallet Provider`,\n    \"\\n\\n\",\n    {authz, signable},\n    error\n  )\n}\n","import \"../default-config\"\nimport {getAccount} from \"@onflow/sdk\"\nimport {Identity} from \"@onflow/types\"\nimport {config} from \"@onflow/config\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {send as fclSend} from \"../send\"\nimport {renderAuthnFrame} from \"./render-authn-frame\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execAuthzService} from \"./exec-authz-service\"\nimport {validateCompositeSignature} from \"./validate-composite-signature\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\nconst GET_AS_PARAM = \"GET_AS_PARAM\"\n\nconst CHALLENGE_RESPONSE_EVENT = \"FCL::CHALLENGE::RESPONSE\"\n\nconst DATA = `{\n  \"VERSION\": \"0.2.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"services\":[]\n}`\n\nconst coldStorage = {\n  get: async () => {\n    const fallback = JSON.parse(DATA)\n    const stored = JSON.parse(localStorage.getItem(NAME))\n    if (stored != null && fallback.VERSION !== stored.VERSION) {\n      localStorage.removeItem(NAME)\n      return fallback\n    }\n    return stored || fallback\n  },\n  put: async data => {\n    localStorage.setItem(NAME, JSON.stringify(data))\n    return data\n  },\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.merge(await coldStorage.get())\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, ctx.all())\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, ctx.all())\n  },\n  [GET_AS_PARAM]: async (ctx, letter, {key}) => {\n    letter.reply({key, value: ctx.get(\"addr\", null), xform: Identity})\n  },\n}\n\nconst identity = v => v\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nasync function authenticate() {\n  return new Promise(async resolve => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    if (user.loggedIn) return resolve(user)\n\n    const [$frame, unrender] = renderAuthnFrame({\n      handshake: await config().get(\"challenge.handshake\"),\n      l6n: window.location.origin,\n    })\n\n    const replyFn = async ({data}) => {\n      if (data.type !== CHALLENGE_RESPONSE_EVENT) return\n      unrender()\n      window.removeEventListener(\"message\", replyFn)\n\n      const msg = {\n        addr: data.addr,\n        cid: `did:fcl:${data.addr}`,\n        loggedIn: true,\n        services: mergeServices(\n          data.services || [],\n          await fetchServices(data.hks, data.code)\n        ),\n      }\n\n      send(NAME, SET_CURRENT_USER, msg)\n      resolve(await snapshot())\n    }\n\n    window.addEventListener(\"message\", replyFn)\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const authz = serviceOfType(user.services, \"authz\")\n\n  let sequenceNum\n  if (account.role.proposer) {\n    const acct = await info()\n    const key = acct.keys.find(key => key.index === authz.keyId)\n    sequenceNum = key.sequenceNumber\n  }\n\n  const signingFunction = async signable => execAuthzService(authz, signable)\n\n  return {\n    ...account,\n    addr: authz.addr,\n    keyId: authz.keyId,\n    sequenceNum,\n    signature: account.signature || null,\n    signingFunction,\n    resolve: null,\n    roles: account.roles,\n  }\n}\n\nfunction param(key) {\n  return async function innerParam() {\n    spawnCurrentUser()\n    await authenticate()\n    return send(NAME, GET_AS_PARAM, {key}, {expectReply: true, timeout: 10})\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  const {account} = await fclSend([getAccount(addr)])\n  return account\n}\n\nexport const currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    param,\n    subscribe,\n    snapshot,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","import {renderFrame} from \"./render-frame\"\n\nexport function renderAuthnFrame({handshake, l6n}) {\n  var url = new URL(handshake)\n  url.searchParams.append(\"l6n\", l6n)\n  return renderFrame(url.href)\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","export function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","import \"./default-config\"\nexport {config} from \"@onflow/config\"\nexport {send} from \"./send\"\nexport {serialize} from \"./serialize\"\nexport {decode} from \"./decode\"\nexport {transaction as tx} from \"./transaction\"\nexport {resolve} from \"./resolve\"\nexport {events} from \"./events\"\nexport {withPrefix, sansPrefix} from \"./address\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nexport const authenticate = () => currentUser().authenticate()\nexport const unauthenticate = () => currentUser().unauthenticate()\n\n// proxy sdk\nexport {isOk, isBad, why, cadence, cdc} from \"@onflow/sdk\"\nexport {\n  build,\n  pipe,\n  transaction,\n  script,\n  ping,\n  getAccount,\n  getEvents,\n  getLatestBlock,\n  getBlockByHeight,\n  getBlockById,\n  getTransactionStatus,\n} from \"@onflow/sdk\"\nexport {\n  authorizations,\n  authorization,\n  args,\n  arg,\n  params,\n  param,\n  proposer,\n  payer,\n  limit,\n  ref,\n} from \"@onflow/sdk\"\n\nexport const VERSION = \"0.0.56\"\n","import {build} from \"@onflow/sdk\"\nimport {resolve} from \"../resolve\"\n\nexport const serialize = async (args = []) => {\n  if (Array.isArray(args)) args = await build(args)\n  return JSON.stringify(await resolve(args))\n}\n"],"names":["config","put","resolve","ix","get","sdkResolve","resolveRefBlockId","node","resolveParams","resolveArguments","resolveAccounts","resolveSignatures","resolveValidators","send","args","opts","Array","isArray","build","sdkSend","decode","response","where","decodersFromConfig","decoders","Object","fromEntries","entries","map","pattern","xform","replace","decodeResponse","fetchTxStatus","transactionId","fclSend","getTransactionStatus","isSealed","tx","status","isExecuted","isFinalized","HANDLERS","INIT","ctx","self","setTimeout","sendSelf","merge","SUBSCRIBE","letter","subscribe","from","UPDATED","all","UNSUBSCRIBE","unsubscribe","SNAPSHOT","reply","cur","next","JSON","stringify","broadcast","scoped","Error","spawnTransaction","spawn","transaction","callback","subscriber","once","predicate","suppress","Promise","reject","unsub","txStatus","statusCode","errorMessage","snapshot","snapshoter","onceFinalized","onceExecuted","onceSealed","isUnknown","isPending","isExpired","currentBlock","getLatestBlock","scheduleTick","hasSubs","hwm","_put4","_put2","getEvents","height","resp","data","_put3","_put6","clearTimeout","spawnEvents","key","sansPrefix","address","renderFrame","src","document","getElementById","$frame","createElement","id","allow","style","position","top","right","left","bottom","width","display","background","frameBorder","boxSizing","border","body","append","remove","urlFromService","service","includeParams","url","URL","endpoint","params","searchParams","renderAuthzFrame","href","METHODS","HTTP/GET","HTTP/POST","label","full","missing","noMatch","HEX","T","length","STRATEGIES","authz","signable","unrender","result","finalizer","e","then","recover","fetch","method","headers","Content-Type","undefined","d","json","local","pollForAuthzUpdates","compositeSignature","reason","authorizationUpdates","error","trouble","IFRAME/RPC","str","num","Math","random","uid","unmount","contentWindow","postMessage","parse","jsonrpc","window","addEventListener","replyFn","removeEventListener","console","pact","state","value","s","o","_settle","bind","v","observer","authorization","account","spawnCurrentUser","authenticate","user","addr","keyId","sequenceNum","signature","signingFunction","compSig","sig","Composite Signature","Authz Service","message","validateCompositeSignature","execAuthzService","roles","services","find","type","role","proposer","getAccount","info","acct","keys","index","sequenceNumber","_Pact","prototype","onFulfilled","onRejected","this","_this","_isSettledPact","thenable","loggedIn","l6n","handshake","location","origin","CHALLENGE_RESPONSE_EVENT","servicesURL","code","authorizations","push","provider","fetchServices","hks","sx1","sx2","msg","cid","NAME","SET_CURRENT_USER","DATA","coldStorage","localStorage","setItem","fallback","stored","getItem","VERSION","removeItem","_merge2","Identity","unauthenticate","param","expectReply","timeout","test","update","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","receive","tag","_exit2","currentUser"],"mappings":"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"}