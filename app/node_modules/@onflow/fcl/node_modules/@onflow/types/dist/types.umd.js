!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self).types={})}(this,function(t){var n=function(t,n,e){return{label:t,asArgument:n,asInjection:e}},e=function(t){return Array.isArray(t)},r=function(t){return"object"==typeof t},u=function(t){return null==t},i=function(t){return"number"==typeof t},o=function(t){return Number.isInteger(t)},f=function(t){return"string"==typeof t},c=function(t){throw new Error("Type Error: "+t)},a=n("Identity",function(t){return t},function(t){return t}),p=n("UInt",function(t){if(i(t)&&o(t))return{type:"UInt",value:t.toString()};c("Expected Positive Integer for type Unsigned Int")},function(t){return t}),l=n("Int",function(t){if(i(t)&&o(t))return{type:"Int",value:t.toString()};c("Expected Integer for type Int")},function(t){return t}),d=n("UInt8",function(t){if(i(t)&&o(t))return{type:"UInt8",value:t.toString()};c("Expected integer for UInt8")},function(t){return t}),s=n("Int8",function(t){if(i(t)&&o(t))return{type:"Int8",value:t.toString()};c("Expected positive integer for Int8")},function(t){return t}),v=n("UInt16",function(t){if(i(t)&&o(t))return{type:"UInt16",value:t.toString()};c("Expected integer for UInt16")},function(t){return t}),y=n("Int16",function(t){if(i(t)&&o(t))return{type:"Int16",value:t.toString()};c("Expected positive integer for Int16")},function(t){return t}),g=n("UInt32",function(t){if(i(t)&&o(t))return{type:"UInt32",value:t.toString()};c("Expected integer for UInt32")},function(t){return t}),I=n("Int32",function(t){if(i(t)&&o(t))return{type:"Int32",value:t.toString()};c("Expected positive integer for Int32")},function(t){return t}),m=n("UInt64",function(t){if(i(t)&&o(t))return{type:"UInt64",value:t.toString()};c("Expected integer for UInt64")},function(t){return t}),x=n("Int64",function(t){if(i(t)&&o(t))return{type:"Int64",value:t.toString()};c("Expected positive integer for Int64")},function(t){return t}),E=n("UInt128",function(t){if(i(t)&&o(t))return{type:"UInt128",value:t.toString()};c("Expected integer for UInt128")},function(t){return t}),U=n("Int128",function(t){if(i(t)&&o(t))return{type:"Int128",value:t.toString()};c("Expected positive integer for Int128")},function(t){return t}),S=n("UInt256",function(t){if(i(t)&&o(t))return{type:"UInt256",value:t.toString()};c("Expected integer for UInt256")},function(t){return t}),A=n("Int256",function(t){if(i(t)&&o(t))return{type:"Int256",value:t.toString()};c("Expected integer for Int256")},function(t){return t}),b=n("Word8",function(t){if(i(t)&&o(t))return{type:"Word8",value:t.toString()};c("Expected positive number for Word8")},function(t){return t}),W=n("Word16",function(t){if(i(t)&&o(t))return{type:"Word16",value:t.toString()};c("Expected positive number for Word16")},function(t){return t}),F=n("Word32",function(t){if(i(t)&&o(t))return{type:"Word32",value:t.toString()};c("Expected positive number for Word32")},function(t){return t}),k=n("Word64",function(t){if(i(t)&&o(t))return{type:"Word64",value:t.toString()};c("Expected positive number for Word64")},function(t){return t}),h=function(){console.error("\n          %c@onflow/types Deprecation Notice\n          ========================\n\n          Passing in Numbers as values for Fix64 and UFix64 types is deprecated and will cease to work in future releases of @onflow/types.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/types/WARNINGS.md#0001-[U]Fix64-as-Number\n\n          =======================\n        ".replace(/\n\s+/g,"\n").trim(),"font-weight:bold;font-family:monospace;")},j=n("UFix64",function(t){return f(t)?{type:"UFix64",value:t}:i(t)?(h(),{type:"UFix64",value:t.toString()}):void c("Expected String for UFix64")},function(t){return t}),w=n("Fix64",function(t){return f(t)?{type:"Fix64",value:t}:i(t)?(h(),{type:"Fix64",value:t.toString()}):void c("Expected String for Fix64")},function(t){return t}),R=n("String",function(t){if(f(t))return{type:"String",value:t};c("Expected String for type String")},function(t){return t}),O=n("Character",function(t){if(f(t))return{type:"Character",value:t};c("Expected Character for type Character")},function(t){return t}),N=n("Bool",function(t){if("boolean"==typeof t)return{type:"Bool",value:t};c("Expected Boolean for type Bool")},function(t){return t}),B=n("Address",function(t){if(f(t))return{type:"Address",value:t};c("Expected Address for type Address")},function(t){return t}),C=n("Void",function(t){if(!t||u(t))return{type:"Void"};c("Expected Void for type Void")},function(t){return t}),D=n("Reference",function(t){if(r(t))return{type:"Reference",value:t};c("Expected Object for type Reference")},function(t){return t}),V=function(t){return void 0===t&&(t=[]),n("Array",function(n){return{type:"Array",value:e(t)?t.map(function(t,e){return t.asArgument(n[e])}):n.map(function(n){return t.asArgument(n)})}},function(t){return t})};t.Address=B,t.Array=V,t.Bool=N,t.Character=O,t.Dictionary=function(t){return void 0===t&&(t=[]),n("Dictionary",function(n){if(r(n))return{type:"Dictionary",value:e(t)?t.map(function(t,e){return{key:t.key.asArgument(n[e].key),value:t.value.asArgument(n[e].value)}}):e(n)?n.map(function(n){return{key:t.key.asArgument(n.key),value:t.value.asArgument(n.value)}}):[{key:t.key.asArgument(n.key),value:t.value.asArgument(n.value)}]};c("Expected Object for type Dictionary")},function(t){return t})},t.Event=function(t,u){return void 0===u&&(u=[]),n("Event",function(n){if(r(n))return{type:"Event",value:{id:t,fields:e(u)?u.map(function(t,e){return{name:n.fields[e].name,value:t.value.asArgument(n.fields[e].value)}}):n.fields.map(function(t){return{name:t.name,value:u.value.asArgument(t.value)}})}};c("Expected Object for type Event")},function(t){return t})},t.Fix64=w,t.Identity=a,t.Int=l,t.Int128=U,t.Int16=y,t.Int256=A,t.Int32=I,t.Int64=x,t.Int8=s,t.Optional=function(t){return n("Optional",function(n){return{type:"Optional",value:u(n)?null:t.asArgument(n)}},function(t){return t})},t.Reference=D,t.Resource=function(t,u){return void 0===u&&(u=[]),n("Resource",function(n){if(r(n))return{type:"Resource",value:{id:t,fields:e(u)?u.map(function(t,e){return{name:n.fields[e].name,value:t.value.asArgument(n.fields[e].value)}}):n.fields.map(function(t){return{name:t.name,value:u.value.asArgument(t.value)}})}};c("Expected Object for type Resource")},function(t){return t})},t.String=R,t.Struct=function(t,u){return void 0===u&&(u=[]),n("Struct",function(n){if(r(n))return{type:"Struct",value:{id:t,fields:e(u)?u.map(function(t,e){return{name:n.fields[e].name,value:t.value.asArgument(n.fields[e].value)}}):n.fields.map(function(t){return{name:t.name,value:u.value.asArgument(t.value)}})}};c("Expected Object for type Struct")},function(t){return t})},t.UFix64=j,t.UInt=p,t.UInt128=E,t.UInt16=v,t.UInt256=S,t.UInt32=g,t.UInt64=m,t.UInt8=d,t.Void=C,t.Word16=W,t.Word32=F,t.Word64=k,t.Word8=b,t._Array=V});
//# sourceMappingURL=types.umd.js.map
