const n=1,e=2,a=4,r=8,s=16,l=32,t=64,u=128,o=256,i=512,m=1,c=2,p=1,g=2,d=4,f='{\n  "tag":1,\n  "assigns":{},\n  "status":2,\n  "reason":null,\n  "accounts":{},\n  "params":{},\n  "arguments":{},\n  "message": {\n    "cadence":null,\n    "refBlock":null,\n    "computLimit":null,\n    "proposer":null,\n    "payer":null,\n    "authorizations":[],\n    "params":[],\n    "arguments":[]\n  },\n  "proposer":null,\n  "authorizations":[],\n  "payer":null,\n  "events": {\n    "eventType":null,\n    "start":null,\n    "end":null\n  },\n  "latestBlock": {\n    "isSealed":null\n  },\n  "block": {\n    "isSealed":null,\n    "id":null,\n    "height":null\n  },\n  "accountAddr":null,\n  "transactionId":null\n}',y=new Set(Object.keys(JSON.parse(f))),v=()=>JSON.parse(f),h=n=>null==n,k="abcdefghijklmnopqrstuvwxyz0123456789".split(""),I=()=>k[~~(Math.random()*k.length)],w=()=>Array.from({length:10},I).join(""),x=n=>{if("object"!=typeof n||h(n)||(n=>"number"===n)(n))return!1;for(let e of y)if(!n.hasOwnProperty(e))return!1;return!0},B=n=>(n.status=2,n),N=(n,e)=>(n.status=1,n.reason=e,n),O=n=>e=>(e.tag=n,B(e)),S=(n,e)=>a=>(a.accounts[e]=JSON.parse('{\n  "kind":1,\n  "tempId":null,\n  "addr":null,\n  "keyId":null,\n  "sequenceNum":null,\n  "signature":null,\n  "signingFunction":null,\n  "resolve":null,\n  "role": {\n    "proposer":false,\n    "authorizer":false,\n    "payer":false,\n    "param":false\n  }\n}'),a.accounts[e].tempId=e,a.accounts[e].addr=n.addr,a.accounts[e].keyId=n.keyId,a.accounts[e].sequenceNum=n.sequenceNum,a.accounts[e].signature=n.signature,a.accounts[e].signingFunction=n.signingFunction,a.accounts[e].resolve=n.resolve,a.accounts[e].role={...a.accounts[e].role,...n.role},B(a)),A=n=>e=>{let a=w();return e.authorizations.push(a),B(tn(e,[S(n,a)]))},b=n=>e=>{let a=w();return e.proposer=a,B(tn(e,[S(n,a)]))},j=n=>e=>{let a=w();return e.payer=a,B(tn(e,[S(n,a)]))},z=n=>e=>{let a=w();return e.message.params.push(a),e.params[a]=JSON.parse('{\n  "kind":2,\n  "tempId":null,\n  "key":null,\n  "value":null,\n  "asParam":null,\n  "xform":null,\n  "resolve": null\n}'),e.params[a].tempId=a,e.params[a].key=n.key,e.params[a].value=n.value,e.params[a].asParam=n.asParam,e.params[a].xform=n.xform,e.params[a].resolve=n.resolve,B(e)},J=n=>e=>{let a=w();return e.message.arguments.push(a),e.arguments[a]=JSON.parse('{\n  "kind":4,\n  "tempId":null,\n  "value":null,\n  "asArgument":null,\n  "xform":null,\n  "resolve": null\n}'),e.arguments[a].tempId=a,e.arguments[a].value=n.value,e.arguments[a].asArgument=n.asArgument,e.arguments[a].xform=n.xform,e.arguments[a].resolve=n.resolve,B(e)},q=O(1),P=O(2),F=O(4),E=O(8),C=O(16),L=O(32),M=O(64),T=O(256),$=O(512),D=O(128),G=n=>e=>Boolean(e.tag&n),H=G(1),K=G(2),Q=G(4),R=G(8),U=G(16),V=G(32),W=G(64),X=G(256),Y=G(512),Z=G(128),_=n=>Boolean(2&n.status),nn=n=>Boolean(1&n.status),en=n=>n.reason,an=n=>Boolean(1&n.kind),rn=n=>Boolean(2&n.kind),sn=n=>Boolean(4&n.kind),ln=async(n,e=[])=>{if(n=(n=>{for(let e of Object.keys(n))if(!y.has(e))throw new Error(`"${e}" is an invalid root level Interaction property.`);return n})(await n),nn(n)||!e.length)return n;const[a,...r]=e,s=await a;if("function"==typeof s)return ln(s(n),r);if(h(s)||!s)return ln(n,r);if(x(s))return ln(s,r);throw new Error("Invalid Interaction Composition")},tn=(...n)=>{const[e,a]=n;return Array.isArray(e)&&null==a?n=>tn(n,e):ln(e,a)},un=n=>n,on=(n,e,a)=>null==n.assigns[e]?a:n.assigns[e],mn=(n,e)=>a=>(a.assigns[n]=e,B(a)),cn=(n,e=un)=>a=>(a.assigns[n]=e(a.assigns[n],a),B(a)),pn=n=>e=>(delete e.assigns[n],B(e));export{p as ACCOUNT,d as ARGUMENT,m as BAD,N as Bad,s as GET_ACCOUNT,i as GET_BLOCK_BY_HEIGHT,o as GET_BLOCK_BY_ID,l as GET_EVENTS,t as GET_LATEST_BLOCK,r as GET_TRANSACTION_STATUS,c as OK,B as Ok,g as PARAM,u as PING,e as SCRIPT,a as TRANSACTION,n as UNKNOWN,pn as destroy,on as get,v as interaction,an as isAccount,sn as isArgument,nn as isBad,U as isGetAccount,Y as isGetBlockByHeight,X as isGetBlockById,V as isGetEvents,W as isGetLatestBlock,R as isGetTransactionStatus,x as isInteraction,_ as isOk,rn as isParam,Z as isPing,K as isScript,Q as isTransaction,H as isUnknown,J as makeArgument,A as makeAuthorizer,C as makeGetAccount,$ as makeGetBlockByHeight,T as makeGetBlockById,L as makeGetEvents,M as makeGetLatestBlock,E as makeGetTransactionStatus,z as makeParam,j as makePayer,D as makePing,b as makeProposer,P as makeScript,F as makeTransaction,q as makeUnknown,tn as pipe,mn as put,cn as update,w as uuid,en as why};
//# sourceMappingURL=interaction.modern.js.map
