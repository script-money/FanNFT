{"version":3,"file":"interaction.modern.js","sources":["../src/interaction.js"],"sourcesContent":["export const UNKNOWN /*                 */ = 0b0000000001\nexport const SCRIPT /*                  */ = 0b0000000010\nexport const TRANSACTION /*             */ = 0b0000000100\nexport const GET_TRANSACTION_STATUS /*  */ = 0b0000001000\nexport const GET_ACCOUNT /*             */ = 0b0000010000\nexport const GET_EVENTS /*              */ = 0b0000100000\nexport const GET_LATEST_BLOCK /*        */ = 0b0001000000\nexport const PING /*                    */ = 0b0010000000\nexport const GET_BLOCK_BY_ID /*         */ = 0b0100000000\nexport const GET_BLOCK_BY_HEIGHT /*     */ = 0b1000000000\n\nexport const BAD /* */ = 0b01\nexport const OK /*  */ = 0b10\n\nexport const ACCOUNT /* */ = 0b001\nexport const PARAM /*   */ = 0b010\nexport const ARGUMENT /**/ = 0b100\n\nconst ACCT = `{\n  \"kind\":${ACCOUNT},\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":${PARAM},\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":${ARGUMENT},\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":${UNKNOWN},\n  \"assigns\":{},\n  \"status\":${OK},\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null\n  },\n  \"latestBlock\": {\n    \"isSealed\":null\n  },\n  \"block\": {\n    \"isSealed\":null,\n    \"id\":null,\n    \"height\":null\n  },\n  \"accountAddr\":null,\n  \"transactionId\":null\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isNumber = (d) => d === \"number\"\nconst isFn = (d) => typeof d === \"function\"\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = (ix) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix) => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat) => (ix) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst makeAccount = (acct, tempId) => (ix) => {\n  ix.accounts[tempId] = JSON.parse(ACCT)\n  ix.accounts[tempId].tempId = tempId\n  ix.accounts[tempId].addr = acct.addr\n  ix.accounts[tempId].keyId = acct.keyId\n  ix.accounts[tempId].sequenceNum = acct.sequenceNum\n  ix.accounts[tempId].signature = acct.signature\n  ix.accounts[tempId].signingFunction = acct.signingFunction\n  ix.accounts[tempId].resolve = acct.resolve\n  ix.accounts[tempId].role = {\n    ...ix.accounts[tempId].role,\n    ...acct.role,\n  }\n  return Ok(ix)\n}\n\nexport const makeAuthorizer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.authorizations.push(tempId)\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makeProposer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.proposer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makePayer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.payer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n} \n\nexport const makeParam = (param) => (ix) => {\n  let tempId = uuid()\n  ix.message.params.push(tempId)\n\n  ix.params[tempId] = JSON.parse(PRM)\n  ix.params[tempId].tempId = tempId\n  ix.params[tempId].key = param.key\n  ix.params[tempId].value = param.value\n  ix.params[tempId].asParam = param.asParam\n  ix.params[tempId].xform = param.xform\n  ix.params[tempId].resolve = param.resolve\n  return Ok(ix)\n}\n\nexport const makeArgument = (arg) => (ix) => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*               */ = makeIx(UNKNOWN)\nexport const makeScript /*                */ = makeIx(SCRIPT)\nexport const makeTransaction /*           */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*  */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetAccount /*            */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*             */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*        */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*          */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*      */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                  */ = makeIx(PING)\n\nconst is = (wat) => (ix) => Boolean(ix.tag & wat)\n\nexport const isUnknown /*               */ = is(UNKNOWN)\nexport const isScript /*                */ = is(SCRIPT)\nexport const isTransaction /*           */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*  */ = is(GET_TRANSACTION_STATUS)\nexport const isGetAccount /*            */ = is(GET_ACCOUNT)\nexport const isGetEvents /*             */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*        */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*          */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*      */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                  */ = is(PING)\n\nexport const isOk /*  */ = (ix) => Boolean(ix.status & OK)\nexport const isBad /* */ = (ix) => Boolean(ix.status & BAD)\nexport const why /*   */ = (ix) => ix.reason\n\nexport const isAccount /*  */ = (account) => Boolean(account.kind & ACCOUNT)\nexport const isParam /*    */ = (param) => Boolean(param.kind & PARAM)\nexport const isArgument /* */ = (argument) => Boolean(argument.kind & ARGUMENT)\n\nconst hardMode = (ix) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  ix = hardMode(await ix)\n  if (isBad(ix) || !fns.length) return ix\n  const [hd, ...rest] = fns\n  const cur = await hd\n  if (isFn(cur)) return recPipe(cur(ix), rest)\n  if (isNull(cur) || !cur) return recPipe(ix, rest)\n  if (isInteraction(cur)) return recPipe(cur, rest)\n  throw new Error(\"Invalid Interaction Composition\")\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return (d) => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = (v) => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => (ix) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => (ix) => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = (key) => (ix) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n"],"names":["UNKNOWN","SCRIPT","TRANSACTION","GET_TRANSACTION_STATUS","GET_ACCOUNT","GET_EVENTS","GET_LATEST_BLOCK","PING","GET_BLOCK_BY_ID","GET_BLOCK_BY_HEIGHT","BAD","OK","ACCOUNT","PARAM","ARGUMENT","IX","KEYS","Set","Object","keys","JSON","parse","interaction","isNull","d","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","isInteraction","ix","isNumber","key","hasOwnProperty","Ok","status","Bad","reason","makeIx","wat","tag","makeAccount","acct","tempId","accounts","addr","keyId","sequenceNum","signature","signingFunction","resolve","role","makeAuthorizer","authorizations","push","pipe","makeProposer","proposer","makePayer","payer","makeParam","param","message","params","value","asParam","xform","makeArgument","arg","arguments","asArgument","makeUnknown","makeScript","makeTransaction","makeGetTransactionStatus","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","is","Boolean","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isOk","isBad","why","isAccount","account","kind","isParam","isArgument","argument","recPipe","async","fns","has","Error","hardMode","hd","rest","cur","args","arg1","arg2","isArray","identity","v","get","fallback","assigns","put","update","fn","destroy"],"mappings":"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"}