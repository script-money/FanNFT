{"version":3,"file":"interaction.module.js","sources":["../src/interaction.js"],"sourcesContent":["export const UNKNOWN /*                 */ = 0b0000000001\nexport const SCRIPT /*                  */ = 0b0000000010\nexport const TRANSACTION /*             */ = 0b0000000100\nexport const GET_TRANSACTION_STATUS /*  */ = 0b0000001000\nexport const GET_ACCOUNT /*             */ = 0b0000010000\nexport const GET_EVENTS /*              */ = 0b0000100000\nexport const GET_LATEST_BLOCK /*        */ = 0b0001000000\nexport const PING /*                    */ = 0b0010000000\nexport const GET_BLOCK_BY_ID /*         */ = 0b0100000000\nexport const GET_BLOCK_BY_HEIGHT /*     */ = 0b1000000000\n\nexport const BAD /* */ = 0b01\nexport const OK /*  */ = 0b10\n\nexport const ACCOUNT /* */ = 0b001\nexport const PARAM /*   */ = 0b010\nexport const ARGUMENT /**/ = 0b100\n\nconst ACCT = `{\n  \"kind\":${ACCOUNT},\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":${PARAM},\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":${ARGUMENT},\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":${UNKNOWN},\n  \"assigns\":{},\n  \"status\":${OK},\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null\n  },\n  \"latestBlock\": {\n    \"isSealed\":null\n  },\n  \"block\": {\n    \"isSealed\":null,\n    \"id\":null,\n    \"height\":null\n  },\n  \"accountAddr\":null,\n  \"transactionId\":null\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isNumber = (d) => d === \"number\"\nconst isFn = (d) => typeof d === \"function\"\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = (ix) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix) => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat) => (ix) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst makeAccount = (acct, tempId) => (ix) => {\n  ix.accounts[tempId] = JSON.parse(ACCT)\n  ix.accounts[tempId].tempId = tempId\n  ix.accounts[tempId].addr = acct.addr\n  ix.accounts[tempId].keyId = acct.keyId\n  ix.accounts[tempId].sequenceNum = acct.sequenceNum\n  ix.accounts[tempId].signature = acct.signature\n  ix.accounts[tempId].signingFunction = acct.signingFunction\n  ix.accounts[tempId].resolve = acct.resolve\n  ix.accounts[tempId].role = {\n    ...ix.accounts[tempId].role,\n    ...acct.role,\n  }\n  return Ok(ix)\n}\n\nexport const makeAuthorizer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.authorizations.push(tempId)\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makeProposer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.proposer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makePayer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.payer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n} \n\nexport const makeParam = (param) => (ix) => {\n  let tempId = uuid()\n  ix.message.params.push(tempId)\n\n  ix.params[tempId] = JSON.parse(PRM)\n  ix.params[tempId].tempId = tempId\n  ix.params[tempId].key = param.key\n  ix.params[tempId].value = param.value\n  ix.params[tempId].asParam = param.asParam\n  ix.params[tempId].xform = param.xform\n  ix.params[tempId].resolve = param.resolve\n  return Ok(ix)\n}\n\nexport const makeArgument = (arg) => (ix) => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*               */ = makeIx(UNKNOWN)\nexport const makeScript /*                */ = makeIx(SCRIPT)\nexport const makeTransaction /*           */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*  */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetAccount /*            */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*             */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*        */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*          */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*      */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                  */ = makeIx(PING)\n\nconst is = (wat) => (ix) => Boolean(ix.tag & wat)\n\nexport const isUnknown /*               */ = is(UNKNOWN)\nexport const isScript /*                */ = is(SCRIPT)\nexport const isTransaction /*           */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*  */ = is(GET_TRANSACTION_STATUS)\nexport const isGetAccount /*            */ = is(GET_ACCOUNT)\nexport const isGetEvents /*             */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*        */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*          */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*      */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                  */ = is(PING)\n\nexport const isOk /*  */ = (ix) => Boolean(ix.status & OK)\nexport const isBad /* */ = (ix) => Boolean(ix.status & BAD)\nexport const why /*   */ = (ix) => ix.reason\n\nexport const isAccount /*  */ = (account) => Boolean(account.kind & ACCOUNT)\nexport const isParam /*    */ = (param) => Boolean(param.kind & PARAM)\nexport const isArgument /* */ = (argument) => Boolean(argument.kind & ARGUMENT)\n\nconst hardMode = (ix) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  ix = hardMode(await ix)\n  if (isBad(ix) || !fns.length) return ix\n  const [hd, ...rest] = fns\n  const cur = await hd\n  if (isFn(cur)) return recPipe(cur(ix), rest)\n  if (isNull(cur) || !cur) return recPipe(ix, rest)\n  if (isInteraction(cur)) return recPipe(cur, rest)\n  throw new Error(\"Invalid Interaction Composition\")\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return (d) => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = (v) => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => (ix) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => (ix) => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = (key) => (ix) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n"],"names":["UNKNOWN","SCRIPT","TRANSACTION","GET_TRANSACTION_STATUS","GET_ACCOUNT","GET_EVENTS","GET_LATEST_BLOCK","PING","GET_BLOCK_BY_ID","GET_BLOCK_BY_HEIGHT","BAD","OK","ACCOUNT","PARAM","ARGUMENT","IX","KEYS","Set","Object","keys","JSON","parse","interaction","isArray","d","Array","isNull","CHARS","split","randChar","Math","random","length","uuid","from","join","isInteraction","ix","isNumber","hasOwnProperty","Ok","status","Bad","reason","makeIx","wat","tag","makeAccount","acct","tempId","accounts","addr","keyId","sequenceNum","signature","signingFunction","resolve","role","makeAuthorizer","authorizations","push","pipe","makeProposer","proposer","makePayer","payer","makeParam","param","message","params","key","value","asParam","xform","makeArgument","arg","arguments","asArgument","makeUnknown","makeScript","makeTransaction","makeGetTransactionStatus","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","is","Boolean","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isOk","isBad","why","isAccount","account","kind","isParam","isArgument","argument","recPipe","fns","has","Error","hardMode","hd","rest","cur","arg1","arg2","identity","v","get","fallback","assigns","put","update","fn","destroy"],"mappings":"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"}