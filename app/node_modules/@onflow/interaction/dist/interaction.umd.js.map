{"version":3,"file":"interaction.umd.js","sources":["../src/interaction.js"],"sourcesContent":["export const UNKNOWN /*                 */ = 0b0000000001\nexport const SCRIPT /*                  */ = 0b0000000010\nexport const TRANSACTION /*             */ = 0b0000000100\nexport const GET_TRANSACTION_STATUS /*  */ = 0b0000001000\nexport const GET_ACCOUNT /*             */ = 0b0000010000\nexport const GET_EVENTS /*              */ = 0b0000100000\nexport const GET_LATEST_BLOCK /*        */ = 0b0001000000\nexport const PING /*                    */ = 0b0010000000\nexport const GET_BLOCK_BY_ID /*         */ = 0b0100000000\nexport const GET_BLOCK_BY_HEIGHT /*     */ = 0b1000000000\n\nexport const BAD /* */ = 0b01\nexport const OK /*  */ = 0b10\n\nexport const ACCOUNT /* */ = 0b001\nexport const PARAM /*   */ = 0b010\nexport const ARGUMENT /**/ = 0b100\n\nconst ACCT = `{\n  \"kind\":${ACCOUNT},\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":${PARAM},\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":${ARGUMENT},\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":${UNKNOWN},\n  \"assigns\":{},\n  \"status\":${OK},\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null\n  },\n  \"latestBlock\": {\n    \"isSealed\":null\n  },\n  \"block\": {\n    \"isSealed\":null,\n    \"id\":null,\n    \"height\":null\n  },\n  \"accountAddr\":null,\n  \"transactionId\":null\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isNumber = (d) => d === \"number\"\nconst isFn = (d) => typeof d === \"function\"\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = (ix) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix) => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat) => (ix) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst makeAccount = (acct, tempId) => (ix) => {\n  ix.accounts[tempId] = JSON.parse(ACCT)\n  ix.accounts[tempId].tempId = tempId\n  ix.accounts[tempId].addr = acct.addr\n  ix.accounts[tempId].keyId = acct.keyId\n  ix.accounts[tempId].sequenceNum = acct.sequenceNum\n  ix.accounts[tempId].signature = acct.signature\n  ix.accounts[tempId].signingFunction = acct.signingFunction\n  ix.accounts[tempId].resolve = acct.resolve\n  ix.accounts[tempId].role = {\n    ...ix.accounts[tempId].role,\n    ...acct.role,\n  }\n  return Ok(ix)\n}\n\nexport const makeAuthorizer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.authorizations.push(tempId)\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makeProposer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.proposer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makePayer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.payer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n} \n\nexport const makeParam = (param) => (ix) => {\n  let tempId = uuid()\n  ix.message.params.push(tempId)\n\n  ix.params[tempId] = JSON.parse(PRM)\n  ix.params[tempId].tempId = tempId\n  ix.params[tempId].key = param.key\n  ix.params[tempId].value = param.value\n  ix.params[tempId].asParam = param.asParam\n  ix.params[tempId].xform = param.xform\n  ix.params[tempId].resolve = param.resolve\n  return Ok(ix)\n}\n\nexport const makeArgument = (arg) => (ix) => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*               */ = makeIx(UNKNOWN)\nexport const makeScript /*                */ = makeIx(SCRIPT)\nexport const makeTransaction /*           */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*  */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetAccount /*            */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*             */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*        */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*          */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*      */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                  */ = makeIx(PING)\n\nconst is = (wat) => (ix) => Boolean(ix.tag & wat)\n\nexport const isUnknown /*               */ = is(UNKNOWN)\nexport const isScript /*                */ = is(SCRIPT)\nexport const isTransaction /*           */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*  */ = is(GET_TRANSACTION_STATUS)\nexport const isGetAccount /*            */ = is(GET_ACCOUNT)\nexport const isGetEvents /*             */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*        */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*          */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*      */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                  */ = is(PING)\n\nexport const isOk /*  */ = (ix) => Boolean(ix.status & OK)\nexport const isBad /* */ = (ix) => Boolean(ix.status & BAD)\nexport const why /*   */ = (ix) => ix.reason\n\nexport const isAccount /*  */ = (account) => Boolean(account.kind & ACCOUNT)\nexport const isParam /*    */ = (param) => Boolean(param.kind & PARAM)\nexport const isArgument /* */ = (argument) => Boolean(argument.kind & ARGUMENT)\n\nconst hardMode = (ix) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  ix = hardMode(await ix)\n  if (isBad(ix) || !fns.length) return ix\n  const [hd, ...rest] = fns\n  const cur = await hd\n  if (isFn(cur)) return recPipe(cur(ix), rest)\n  if (isNull(cur) || !cur) return recPipe(ix, rest)\n  if (isInteraction(cur)) return recPipe(cur, rest)\n  throw new Error(\"Invalid Interaction Composition\")\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return (d) => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = (v) => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => (ix) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => (ix) => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = (key) => (ix) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","isArray","d","Array","isNull","CHARS","split","randChar","Math","random","length","uuid","from","join","isInteraction","ix","isNumber","hasOwnProperty","Ok","status","makeIx","wat","tag","makeAccount","acct","tempId","accounts","addr","keyId","sequenceNum","signature","signingFunction","resolve","role","makeUnknown","makeScript","makeTransaction","makeGetTransactionStatus","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","is","Boolean","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isBad","recPipe","fns","key","has","Error","hardMode","hd","rest","cur","pipe","arg1","arg2","identity","v","reason","assigns","fallback","account","kind","argument","param","arg","message","arguments","push","value","asArgument","xform","authorizations","params","asParam","payer","proposer","fn"],"mappings":"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"}