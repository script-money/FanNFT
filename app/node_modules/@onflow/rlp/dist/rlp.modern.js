function r(n){if(Array.isArray(n)){for(var f=[],t=0;t<n.length;t++)f.push(r(n[t]));var i=Buffer.concat(f);return Buffer.concat([e(i.length,192),i])}var o=u(n);return 1===o.length&&o[0]<128?o:Buffer.concat([e(o.length,128),o])}function e(r,e){if(r<56)return Buffer.from([r+e]);var n=t(r),f=t(e+55+n.length/2);return Buffer.from(f+n,"hex")}function n(r){if(!r||0===r.length)return Buffer.from([]);var e=u(r),n=e[0];if(n<=127)return e.length;if(n<=183)return n-127;if(n<=191)return n-182;if(n<=247)return n-191;var f=n-246;return f+function(r,e){if("00"===r.slice(0,2))throw new Error("invalid RLP: extra zeros");return parseInt(r,16)}(e.slice(1,f).toString("hex"))}function f(r){return"0x"===r.slice(0,2)}function t(r){if(r<0)throw new Error("Invalid integer as argument, must be unsigned!");var e=r.toString(16);return e.length%2?"0"+e:e}function u(r){if(!Buffer.isBuffer(r)){if("string"==typeof r)return f(r)?Buffer.from((n="string"!=typeof(u=r)?u:f(u)?u.slice(2):u).length%2?"0"+n:n,"hex"):Buffer.from(r);if("number"==typeof r)return r?(e=t(r),Buffer.from(e,"hex")):Buffer.from([]);if(null==r)return Buffer.from([]);if(r instanceof Uint8Array)return Buffer.from(r);throw new Error("invalid type")}var e,n,u;return r}export{r as encode,n as getLength,u as toBuffer};
//# sourceMappingURL=rlp.modern.js.map
