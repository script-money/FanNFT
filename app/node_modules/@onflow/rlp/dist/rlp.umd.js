!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((r=r||self).rlp={})}(this,function(r){function e(r,e){if(r<56)return Buffer.from([r+e]);var n=f(r),t=f(e+55+n.length/2);return Buffer.from(t+n,"hex")}function n(r){return"0x"===r.slice(0,2)}function f(r){if(r<0)throw new Error("Invalid integer as argument, must be unsigned!");var e=r.toString(16);return e.length%2?"0"+e:e}function t(r){if(!Buffer.isBuffer(r)){if("string"==typeof r)return n(r)?Buffer.from((t="string"!=typeof(u=r)?u:n(u)?u.slice(2):u).length%2?"0"+t:t,"hex"):Buffer.from(r);if("number"==typeof r)return r?(e=f(r),Buffer.from(e,"hex")):Buffer.from([]);if(null==r)return Buffer.from([]);if(r instanceof Uint8Array)return Buffer.from(r);throw new Error("invalid type")}var e,t,u;return r}r.encode=function r(n){if(Array.isArray(n)){for(var f=[],u=0;u<n.length;u++)f.push(r(n[u]));var i=Buffer.concat(f);return Buffer.concat([e(i.length,192),i])}var o=t(n);return 1===o.length&&o[0]<128?o:Buffer.concat([e(o.length,128),o])},r.getLength=function(r){if(!r||0===r.length)return Buffer.from([]);var e=t(r),n=e[0];if(n<=127)return e.length;if(n<=183)return n-127;if(n<=191)return n-182;if(n<=247)return n-191;var f=n-246;return f+function(r,e){if("00"===r.slice(0,2))throw new Error("invalid RLP: extra zeros");return parseInt(r,16)}(e.slice(1,f).toString("hex"))},r.toBuffer=t});
//# sourceMappingURL=rlp.umd.js.map
