{"version":3,"file":"actor.js","sources":["../src/index.js","../src/mailbox/index.js"],"sourcesContent":["import {mailbox as createMailbox} from \"./mailbox\"\nimport queueMicrotask from \"queue-microtask\"\n\nexport const INIT = \"INIT\"\nexport const SUBSCRIBE = \"SUBSCRIBE\"\nexport const UNSUBSCRIBE = \"UNSUBSCRIBE\"\nexport const UPDATED = \"UPDATED\"\nexport const SNAPSHOT = \"SNAPSHOT\"\nexport const EXIT = \"EXIT\"\nexport const TERMINATE = \"TERMINATE\"\n\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global === \"object\" && global.global === global && global) ||\n  (typeof window === \"object\" && window.window === window && window)\n\nroot.FCL_REGISTRY = root.FCL_REGISTRY == null ? {} : root.FCL_REGISTRY\nvar pid = 0b0\n\nconst DEFAULT_TIMEOUT = 5000\nconst DEFAULT_TAG = \"---\"\nexport const send = (addr, tag, data, opts = {}) =>\n  new Promise((reply, reject) => {\n    const expectReply = opts.expectReply || false\n    const timeout = opts.timeout != null ? opts.timeout : DEFAULT_TIMEOUT\n\n    if (expectReply && timeout) {\n      setTimeout(\n        () =>\n          reject(new Error(`Timeout: ${timeout}ms passed without a response.`)),\n        timeout\n      )\n    }\n\n    const payload = {\n      to: addr,\n      from: opts.from,\n      tag,\n      data,\n      timeout,\n      reply,\n      reject,\n    }\n\n    try {\n      root.FCL_REGISTRY[addr].mailbox.deliver(payload)\n      if (!expectReply) reply(true)\n    } catch (error) {\n      console.error(\"FCL.Actor -- Could Not Deliver Message\", payload, error)\n    }\n  })\n\nexport const kill = addr => {\n  delete root.FCL_REGISTRY[addr]\n}\n\nconst fromHandlers = (handlers = {}) => async ctx => {\n  if (typeof handlers[INIT] === \"function\") await handlers[INIT](ctx)\n  __loop: while (1) {\n    const letter = await ctx.receive()\n    try {\n      if (letter.tag === EXIT) {\n        if (typeof handlers[TERMINATE] === \"function\") {\n          await handlers[TERMINATE](ctx, letter, letter.data || {})\n        }\n        break __loop\n      }\n      await handlers[letter.tag](ctx, letter, letter.data || {})\n    } catch (error) {\n      console.error(`${ctx.self()} Error`, letter, error)\n    } finally {\n      continue __loop\n    }\n  }\n}\n\nexport const spawn = (fn, addr = null) => {\n  if (addr == null) addr = ++pid\n  if (root.FCL_REGISTRY[addr] != null) return addr\n\n  root.FCL_REGISTRY[addr] = {\n    addr,\n    mailbox: createMailbox(),\n    subs: new Set(),\n    kvs: {},\n  }\n\n  const ctx = {\n    self: () => addr,\n    receive: () => root.FCL_REGISTRY[addr].mailbox.receive(),\n    send: (to, tag, data, opts = {}) => {\n      opts.from = addr\n      return send(to, tag, data, opts)\n    },\n    sendSelf: (tag, data, opts) => {\n      if (root.FCL_REGISTRY[addr]) send(addr, tag, data, opts)\n    },\n    broadcast: (tag, data, opts = {}) => {\n      opts.from = addr\n      for (let to of root.FCL_REGISTRY[addr].subs) send(to, tag, data, opts)\n    },\n    subscribe: sub => sub != null && root.FCL_REGISTRY[addr].subs.add(sub),\n    unsubscribe: sub => sub != null && root.FCL_REGISTRY[addr].subs.delete(sub),\n    subscriberCount: () => root.FCL_REGISTRY[addr].subs.size,\n    hasSubs: () => !!root.FCL_REGISTRY[addr].subs.size,\n    put: (key, value) => {\n      if (key != null) root.FCL_REGISTRY[addr].kvs[key] = value\n    },\n    get: (key, fallback) => {\n      const value = root.FCL_REGISTRY[addr].kvs[key]\n      return value == null ? fallback : value\n    },\n    delete: key => {\n      delete root.FCL_REGISTRY[addr].kvs[key]\n    },\n    update: (key, fn) => {\n      if (key != null)\n        root.FCL_REGISTRY[addr].kvs[key] = fn(root.FCL_REGISTRY[addr].kvs[key])\n    },\n    keys: () => {\n      return Object.keys(root.FCL_REGISTRY[addr].kvs)\n    },\n    all: () => {\n      return root.FCL_REGISTRY[addr].kvs\n    },\n    where: pattern => {\n      return Object.keys(root.FCL_REGISTRY[addr].kvs).reduce((acc, key) => {\n        return pattern.test(key)\n          ? {...acc, [key]: root.FCL_REGISTRY[addr].kvs[key]}\n          : acc\n      }, {})\n    },\n    merge: (data = {}) => {\n      Object.keys(data).forEach(\n        key => (root.FCL_REGISTRY[addr].kvs[key] = data[key])\n      )\n    },\n  }\n\n  if (typeof fn === \"object\") fn = fromHandlers(fn)\n\n  queueMicrotask(async () => {\n    await fn(ctx)\n    kill(addr)\n  })\n\n  return addr\n}\n\n// Returns an unsubscribe function\n// A SUBSCRIBE handler will need to be created to handle the subscription event\n//\n//  [SUBSCRIBE]: (ctx, letter) => {\n//    ctx.subscribe(letter.from)\n//    ctx.send(letter.from, UPDATED, ctx.all())\n//  }\n//\nexport function subscriber(address, spawnFn, callback) {\n  spawnFn(address)\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(address, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(address, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\n// Returns a promise that returns a result\n// A SNAPSHOT handler will need to be created to handle the snapshot event\n//\n//  [SNAPSHOT]: (ctx, letter) => {\n//    letter.reply(ctx.all())\n//  }\n//\nexport function snapshoter(address, spawnFn) {\n  spawnFn(address)\n  return send(address, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n","export const mailbox = () => {\n  const queue = []\n  var next\n\n  return {\n    async deliver(msg) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift())\n        next = undefined\n      }\n    },\n\n    receive() {\n      return new Promise(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n"],"names":["pact","state","value","s","o","_settle","bind","v","then","observer","_Pact","prototype","onFulfilled","onRejected","result","this","callback","e","_this","thenable","test","update","body","stage","shouldContinue","_isSettledPact","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","INIT","root","self","global","window","FCL_REGISTRY","pid","send","addr","tag","data","opts","Promise","reply","expectReply","timeout","setTimeout","Error","payload","to","from","mailbox","deliver","error","console","kill","spawn","fn","next","queue","msg","push","shift","undefined","receive","resolve","subs","Set","kvs","handlers","ctx","sendSelf","broadcast","subscribe","sub","add","unsubscribe","subscriberCount","size","hasSubs","put","key","get","fallback","delete","keys","Object","all","where","pattern","reduce","acc","merge","forEach","letter","finalizer","recover","queueMicrotask","address","spawnFn","_exit2"],"mappings":"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"}