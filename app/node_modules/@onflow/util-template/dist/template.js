function n(t,e,o){if(void 0===t&&(t=[]),void 0===e&&(e=[]),void 0===o&&(o=[]),!t.length&&!e.length)return o;if(!t.length)return o;if(!e.length)return[].concat(o,[t[0]]);var r=t[0],i=t.slice(1),a=e[0],u=e.slice(1);return void 0!==r&&o.push(r),void 0!==a&&o.push(a),n(i,u,o)}function t(n){return function(e){return"function"==typeof e?(console.warn("\n        %cFCL/SDK Deprecation Notice\n        ============================\n\n        Interopolation of functions into template literals will not be a thing in future versions of the Flow-JS-SDK or FCL.\n        You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\n\n        ============================\n      ","font-weight:bold;font-family:monospace;"),t(n)(e(n))):String(e)}}exports.interleave=n,exports.template=function(e){for(var o=arguments.length,r=new Array(o>1?o-1:0),i=1;i<o;i++)r[i-1]=arguments[i];return"string"==typeof e?function(){return e}:Array.isArray(e)?function(o){return n(e,r.map(t(o))).join("").trim()}:e};
//# sourceMappingURL=template.js.map
