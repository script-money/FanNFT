!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((n=n||self).utilTemplate={})}(this,function(n){function e(n,t,o){if(void 0===n&&(n=[]),void 0===t&&(t=[]),void 0===o&&(o=[]),!n.length&&!t.length)return o;if(!n.length)return o;if(!t.length)return[].concat(o,[n[0]]);var i=n[0],r=n.slice(1),f=t[0],u=t.slice(1);return void 0!==i&&o.push(i),void 0!==f&&o.push(f),e(r,u,o)}function t(n){return function(e){return"function"==typeof e?(console.warn("\n        %cFCL/SDK Deprecation Notice\n        ============================\n\n        Interopolation of functions into template literals will not be a thing in future versions of the Flow-JS-SDK or FCL.\n        You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\n\n        ============================\n      ","font-weight:bold;font-family:monospace;"),t(n)(e(n))):String(e)}}n.interleave=e,n.template=function(n){for(var o=arguments.length,i=new Array(o>1?o-1:0),r=1;r<o;r++)i[r-1]=arguments[r];return"string"==typeof n?function(){return n}:Array.isArray(n)?function(o){return e(n,i.map(t(o))).join("").trim()}:n}});
//# sourceMappingURL=template.umd.js.map
